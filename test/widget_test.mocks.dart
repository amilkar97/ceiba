// Mocks generated by Mockito 5.1.0 from annotations
// in ceiba/test/widget_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:ceiba/models/post_model.dart' as _i4;
import 'package:ceiba/models/user_model.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAddress_0 extends _i1.Fake implements _i2.Address {}

class _FakeCompany_1 extends _i1.Fake implements _i2.Company {}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);
  @override
  set id(int? _id) => super.noSuchMethod(Invocation.setter(#id, _id),
      returnValueForMissingStub: null);
  @override
  String get name =>
      (super.noSuchMethod(Invocation.getter(#name), returnValue: '') as String);
  @override
  set name(String? _name) => super.noSuchMethod(Invocation.setter(#name, _name),
      returnValueForMissingStub: null);
  @override
  String get username =>
      (super.noSuchMethod(Invocation.getter(#username), returnValue: '')
          as String);
  @override
  set username(String? _username) =>
      super.noSuchMethod(Invocation.setter(#username, _username),
          returnValueForMissingStub: null);
  @override
  String get email =>
      (super.noSuchMethod(Invocation.getter(#email), returnValue: '')
          as String);
  @override
  set email(String? _email) =>
      super.noSuchMethod(Invocation.setter(#email, _email),
          returnValueForMissingStub: null);
  @override
  _i2.Address get address => (super.noSuchMethod(Invocation.getter(#address),
      returnValue: _FakeAddress_0()) as _i2.Address);
  @override
  set address(_i2.Address? _address) =>
      super.noSuchMethod(Invocation.setter(#address, _address),
          returnValueForMissingStub: null);
  @override
  String get phone =>
      (super.noSuchMethod(Invocation.getter(#phone), returnValue: '')
          as String);
  @override
  set phone(String? _phone) =>
      super.noSuchMethod(Invocation.setter(#phone, _phone),
          returnValueForMissingStub: null);
  @override
  String get website =>
      (super.noSuchMethod(Invocation.getter(#website), returnValue: '')
          as String);
  @override
  set website(String? _website) =>
      super.noSuchMethod(Invocation.setter(#website, _website),
          returnValueForMissingStub: null);
  @override
  _i2.Company get company => (super.noSuchMethod(Invocation.getter(#company),
      returnValue: _FakeCompany_1()) as _i2.Company);
  @override
  set company(_i2.Company? _company) =>
      super.noSuchMethod(Invocation.setter(#company, _company),
          returnValueForMissingStub: null);
  @override
  bool get isInBox =>
      (super.noSuchMethod(Invocation.getter(#isInBox), returnValue: false)
          as bool);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
  @override
  _i3.Future<void> save() => (super.noSuchMethod(Invocation.method(#save, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> delete() =>
      (super.noSuchMethod(Invocation.method(#delete, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}

/// A class which mocks [Post].
///
/// See the documentation for Mockito's code generation for more information.
class MockPost extends _i1.Mock implements _i4.Post {
  MockPost() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get userId =>
      (super.noSuchMethod(Invocation.getter(#userId), returnValue: 0) as int);
  @override
  set userId(int? _userId) =>
      super.noSuchMethod(Invocation.setter(#userId, _userId),
          returnValueForMissingStub: null);
  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);
  @override
  set id(int? _id) => super.noSuchMethod(Invocation.setter(#id, _id),
      returnValueForMissingStub: null);
  @override
  String get title =>
      (super.noSuchMethod(Invocation.getter(#title), returnValue: '')
          as String);
  @override
  set title(String? _title) =>
      super.noSuchMethod(Invocation.setter(#title, _title),
          returnValueForMissingStub: null);
  @override
  String get body =>
      (super.noSuchMethod(Invocation.getter(#body), returnValue: '') as String);
  @override
  set body(String? _body) => super.noSuchMethod(Invocation.setter(#body, _body),
      returnValueForMissingStub: null);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}
